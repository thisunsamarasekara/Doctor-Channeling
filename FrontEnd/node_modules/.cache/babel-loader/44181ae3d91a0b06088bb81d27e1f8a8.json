{"ast":null,"code":"var _jsxFileName = \"E:\\\\secound year\\\\2 sem\\\\ITP\\\\Doctor Channeling\\\\Doctor Channeling\\\\FrontEnd\\\\src\\\\doctor-search-results\\\\docSearchResults.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class doctorlist extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      doctors: [],\n      specialization: '',\n      date: ''\n    };\n  }\n\n  componentDidMount() {\n    const specialization = localStorage.getItem('specialization');\n    const date = localStorage.getItem('date');\n    /*  this.setState({ specialization,date });  */\n\n    /* console.log(user,rememberMe); */\n\n    this.retrievedoctor(specialization, date);\n  }\n\n  retrievedoctor(spec, date) {\n    axios.get(\"http://localhost:8000/doctor/?spec=\" + spec + `&date=` + date).then(res => {\n      if (res.data.success) {\n        this.setState({\n          doctors: res.data.existingPosts\n        });\n        console.log(this.state.doctors);\n      }\n    });\n  }\n\n  createbooking(id, name, specialization, date) {\n    console.log(id, name, specialization, date);\n    const data = {\n      doctorId: id,\n      Name: name,\n      Specialization: specialization,\n      date: date,\n      Status: \"sucuss\"\n    };\n    axios.post(\"http://localhost:8000/booking\", data).then(res => {\n      console.log(res.data);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Doctor Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Specialization\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.doctors.map((doctor, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"row\",\n              children: index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `/post/${doctor._id}`,\n                style: {\n                  textDecoration: 'none'\n                },\n                children: doctor.Name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctor.Specialization\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: doctor.dates\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [\"\\xA0\", /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"btn btn-danger\",\n                href: `/bookingdetails`,\n                onClick: () => this.createbooking(doctor._id, doctor.Name, doctor.Specialization, doctor.dates),\n                children: \"\\xA0Booking\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this)]\n          }, index + 1, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["E:/secound year/2 sem/ITP/Doctor Channeling/Doctor Channeling/FrontEnd/src/doctor-search-results/docSearchResults.jsx"],"names":["React","Component","axios","doctorlist","constructor","props","state","doctors","specialization","date","componentDidMount","localStorage","getItem","retrievedoctor","spec","get","then","res","data","success","setState","existingPosts","console","log","createbooking","id","name","doctorId","Name","Specialization","Status","post","render","map","doctor","index","_id","textDecoration","dates"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class doctorlist extends Component {\r\n    constructor(props) {\r\n      super(props)\r\n      this.state = {\r\n        doctors: [],\r\n        specialization:'',\r\n        date:''\r\n  \r\n      }}\r\n    componentDidMount() {\r\n      const specialization = localStorage.getItem('specialization') ;\r\n      const date = localStorage.getItem('date') ;\r\n     /*  this.setState({ specialization,date });  */\r\n      /* console.log(user,rememberMe); */\r\n      this.retrievedoctor(specialization,date);\r\n    }\r\n  \r\n    retrievedoctor(spec,date) {\r\n      axios.get(\"http://localhost:8000/doctor/?spec=\"+spec+`&date=`+date).then(res => {\r\n        if (res.data.success) {\r\n          this.setState({\r\n            doctors: res.data.existingPosts\r\n          });\r\n          console.log(this.state.doctors);\r\n        }\r\n      });\r\n    }\r\n  createbooking(id,name,specialization,date){\r\n    console.log(id,name,specialization,date);\r\n    const data = {\r\n      doctorId:id,\r\n      Name:name,\r\n      Specialization:specialization,\r\n      date:date,\r\n      Status:\"sucuss\"\r\n  }\r\n   axios.post(\"http://localhost:8000/booking\",data)\r\n  .then((res) =>{console.log(res.data);\r\n  \r\n  })} \r\n    render() {\r\n      return (\r\n        <div className=\"container\">\r\n  \r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th scope=\"col\">No</th>\r\n                <th scope=\"col\">Doctor Name</th>\r\n                <th scope=\"col\">Specialization</th>\r\n                <th scope=\"col\">Date</th>\r\n                <th scope=\"col\">Action</th>\r\n  \r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {this.state.doctors.map((doctor, index) => (\r\n                <tr key={index + 1}>\r\n                  <th scope=\"row\">{index + 1}</th>\r\n  \r\n                  <td>\r\n                    <a href={`/post/${doctor._id}`} style={{ textDecoration: 'none' }}>\r\n                      {doctor.Name}\r\n                    </a>\r\n  \r\n                  </td>\r\n                  <td>{doctor.Specialization}</td>\r\n                  <td>{doctor.dates}</td>\r\n  \r\n                  <td>\r\n  \r\n                    &nbsp;\r\n                    <a className=\"btn btn-danger\"   href={`/bookingdetails`}  onClick={()=>this.createbooking(doctor._id,doctor.Name,doctor.Specialization,doctor.dates)}>\r\n                     &nbsp;Booking\r\n                    </a>\r\n                  </td>\r\n                </tr>\r\n  \r\n              ))}\r\n  \r\n            </tbody> \r\n          </table>\r\n  \r\n  \r\n        </div>\r\n      )\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}